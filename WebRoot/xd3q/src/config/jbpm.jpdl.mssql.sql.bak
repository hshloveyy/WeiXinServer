drop VIEW  V_WF_CURRENT_JOB;
drop INDEX IDX_ACTION_ACTNDL ON JBPM_ACTION ;
drop INDEX IDX_ACTION_PROCDF ON JBPM_ACTION ;
drop INDEX IDX_ACTION_EVENT ON JBPM_ACTION ;
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACTION_REFACT]') AND parent_object_id = OBJECT_ID(N'[dbo].[JBPM_ACTION]'))
alter table JBPM_ACTION drop constraint FK_ACTION_REFACT;
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_CRTETIMERACT_TA]') AND parent_object_id = OBJECT_ID(N'[dbo].[JBPM_ACTION]'))
alter table JBPM_ACTION drop constraint FK_CRTETIMERACT_TA ;
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACTION_PROCDEF]') AND parent_object_id = OBJECT_ID(N'[dbo].[JBPM_ACTION]'))
alter table JBPM_ACTION drop constraint FK_ACTION_PROCDEF;
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACTION_EVENT]') AND parent_object_id = OBJECT_ID(N'[dbo].[JBPM_ACTION]'))
alter table JBPM_ACTION drop constraint FK_ACTION_EVENT;
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACTION_ACTNDEL]') AND parent_object_id = OBJECT_ID(N'[dbo].[JBPM_ACTION]'))
alter table JBPM_ACTION drop constraint FK_ACTION_ACTNDEL;
IF  EXISTS (SELECT * FROM sys.foreign_keys WHERE object_id = OBJECT_ID(N'[dbo].[FK_ACTION_EXPTHDL]') AND parent_object_id = OBJECT_ID(N'[dbo].[JBPM_ACTION]'))
alter table JBPM_ACTION drop constraint FK_ACTION_EXPTHDL;
alter table JBPM_BYTEARRAY drop constraint FK_BYTEARR_FILDEF;
alter table JBPM_BYTEBLOCK drop constraint FK_BYTEBLOCK_FILE;
drop index IDX_COMMENT_TSK ON JBPM_COMMENT;
drop index IDX_COMMENT_TOKEN on JBPM_COMMENT;
alter table JBPM_COMMENT drop constraint FK_COMMENT_TOKEN;
alter table JBPM_COMMENT drop constraint FK_COMMENT_TSK;
alter table JBPM_DECISIONCONDITIONS drop constraint FK_DECCOND_DEC;
drop index IDX_DELEG_PRCD on JBPM_DELEGATION;
alter table JBPM_DELEGATION drop constraint FK_DELEGATION_PRCD;
alter table JBPM_EVENT drop constraint FK_EVENT_PROCDEF;
alter table JBPM_EVENT drop constraint FK_EVENT_TRANS;
alter table JBPM_EVENT drop constraint FK_EVENT_NODE;
alter table JBPM_EVENT drop constraint FK_EVENT_TASK ;
alter table JBPM_ID_GROUP drop constraint FK_ID_GRP_PARENT;
alter table JBPM_ID_MEMBERSHIP drop constraint FK_ID_MEMSHIP_GRP;
alter table JBPM_ID_MEMBERSHIP drop constraint FK_ID_MEMSHIP_USR ;
drop index IDX_JOB_TSKINST on JBPM_JOB;
drop index IDX_JOB_TOKEN on JBPM_JOB;
drop index IDX_JOB_PRINST on JBPM_JOB;
alter table JBPM_JOB drop constraint FK_JOB_PRINST;
alter table JBPM_JOB drop constraint FK_JOB_ACTION ;
alter table JBPM_JOB drop constraint FK_JOB_TOKEN ;
alter table JBPM_JOB drop constraint FK_JOB_NODE;
alter table JBPM_JOB drop constraint FK_JOB_TSKINST ;
alter table JBPM_LOG drop constraint FK_LOG_SOURCENODE;
alter table JBPM_LOG drop constraint FK_LOG_DESTNODE;
alter table JBPM_LOG drop constraint FK_LOG_TOKEN;
alter table JBPM_LOG drop constraint FK_LOG_TRANSITION;
alter table JBPM_LOG drop constraint FK_LOG_TASKINST;
alter table JBPM_LOG drop constraint FK_LOG_CHILDTOKEN;
alter table JBPM_LOG drop constraint FK_LOG_OLDBYTES;
alter table JBPM_LOG drop constraint FK_LOG_SWIMINST;
alter table JBPM_LOG drop constraint FK_LOG_NEWBYTES;
alter table JBPM_LOG drop constraint FK_LOG_ACTION;
alter table JBPM_LOG drop constraint FK_LOG_VARINST ;
alter table JBPM_LOG drop constraint FK_LOG_NODE;
alter table JBPM_LOG drop constraint FK_LOG_PARENT;
drop index IDX_MODDEF_PROCDF  ON JBPM_MODULEDEFINITION ;
alter table JBPM_MODULEDEFINITION drop constraint FK_MODDEF_PROCDEF;
alter table JBPM_MODULEDEFINITION drop constraint FK_TSKDEF_START;
drop index IDX_MODINST_PRINST  ON JBPM_MODULEINSTANCE ;
alter table JBPM_MODULEINSTANCE drop constraint FK_MODINST_PRCINST;
alter table JBPM_MODULEINSTANCE drop constraint FK_TASKMGTINST_TMD;
drop index IDX_PSTATE_SBPRCDEF  ON JBPM_NODE  ;
drop index IDX_NODE_PROCDEF  ON JBPM_NODE ;
drop index IDX_NODE_ACTION ON JBPM_NODE ;
drop index IDX_NODE_SUPRSTATE  ON JBPM_NODE ;
alter table JBPM_NODE drop constraint FK_DECISION_DELEG;
alter table JBPM_NODE drop constraint FK_NODE_PROCDEF;
alter table JBPM_NODE drop constraint FK_NODE_ACTION;
alter table JBPM_NODE drop constraint FK_PROCST_SBPRCDEF;
alter table JBPM_NODE drop constraint FK_NODE_SCRIPT;
alter table JBPM_NODE drop constraint FK_NODE_SUPERSTATE ;
drop index IDX_TSKINST_SWLANE  ON JBPM_POOLEDACTOR ;
drop index IDX_PLDACTR_ACTID  ON JBPM_POOLEDACTOR ;
alter table JBPM_POOLEDACTOR drop constraint FK_POOLEDACTOR_SLI ;
drop index IDX_PROCDEF_STRTST ON JBPM_PROCESSDEFINITION ;
alter table JBPM_PROCESSDEFINITION drop constraint FK_PROCDEF_STRTSTA ;
drop index IDX_PROCIN_SPROCTK  ON JBPM_PROCESSINSTANCE ;
drop index IDX_PROCIN_ROOTTK ON JBPM_PROCESSINSTANCE ;
drop index IDX_PROCIN_PROCDEF ON JBPM_PROCESSINSTANCE ;
drop index IDX_PROCIN_KEY ON JBPM_PROCESSINSTANCE ;
alter table JBPM_PROCESSINSTANCE drop constraint FK_PROCIN_PROCDEF ;
alter table JBPM_PROCESSINSTANCE drop constraint FK_PROCIN_ROOTTKN ;
alter table JBPM_PROCESSINSTANCE drop constraint FK_PROCIN_SPROCTKN ;
drop index IDX_RTACTN_ACTION  ON JBPM_RUNTIMEACTION ;
drop index IDX_RTACTN_PRCINST  ON JBPM_RUNTIMEACTION ;
alter table JBPM_RUNTIMEACTION drop constraint FK_RTACTN_PROCINST ;
alter table JBPM_RUNTIMEACTION drop constraint FK_RTACTN_ACTION ;
alter table JBPM_SWIMLANE drop constraint FK_SWL_ASSDEL ;
alter table JBPM_SWIMLANE drop constraint FK_SWL_TSKMGMTDEF;
drop index IDX_SWIMLINST_SL ON JBPM_SWIMLANEINSTANCE ;
alter table JBPM_SWIMLANEINSTANCE drop constraint FK_SWIMLANEINST_TM;
alter table JBPM_SWIMLANEINSTANCE drop constraint FK_SWIMLANEINST_SL;
drop index IDX_TASK_PROCDEF ON JBPM_TASK ;
drop index IDX_TASK_TSKNODE ON JBPM_TASK ;
drop index IDX_TASK_TASKMGTDF ON JBPM_TASK  ;
alter table JBPM_TASK drop constraint FK_TASK_STARTST;
alter table JBPM_TASK drop constraint FK_TASK_PROCDEF;
alter table JBPM_TASK drop constraint FK_TASK_ASSDEL ;
alter table JBPM_TASK drop constraint FK_TASK_SWIMLANE ;
alter table JBPM_TASK drop constraint FK_TASK_TASKNODE ;
alter table JBPM_TASK drop constraint FK_TASK_TASKMGTDEF ;
alter table JBPM_TASK drop constraint FK_TSK_TSKCTRL ;
alter table JBPM_TASKACTORPOOL drop constraint FK_TASKACTPL_TSKI ;
alter table JBPM_TASKACTORPOOL drop constraint FK_TSKACTPOL_PLACT ;
alter table JBPM_TASKCONTROLLER drop constraint FK_TSKCTRL_DELEG;
drop index IDX_TSKINST_TMINST  ON JBPM_TASKINSTANCE ;
drop index IDX_TSKINST_SLINST  ON JBPM_TASKINSTANCE ;
drop index IDX_TASKINST_TOKN  ON JBPM_TASKINSTANCE ;
drop index IDX_TASK_ACTORID  ON JBPM_TASKINSTANCE ;
drop index IDX_TASKINST_TSK ON JBPM_TASKINSTANCE ;
alter table JBPM_TASKINSTANCE drop constraint FK_TSKINS_PRCINS ;
alter table JBPM_TASKINSTANCE drop constraint FK_TASKINST_TMINST ;
alter table JBPM_TASKINSTANCE drop constraint FK_TASKINST_TOKEN ;
alter table JBPM_TASKINSTANCE drop constraint FK_TASKINST_SLINST;
alter table JBPM_TASKINSTANCE drop constraint FK_TASKINST_TASK;
drop index IDX_TOKEN_PARENT ON JBPM_TOKEN ;
drop index IDX_TOKEN_PROCIN ON JBPM_TOKEN ;
drop index IDX_TOKEN_NODE ON JBPM_TOKEN ;
drop index IDX_TOKEN_SUBPI ON JBPM_TOKEN  ;
alter table JBPM_TOKEN drop constraint FK_TOKEN_SUBPI ;
alter table JBPM_TOKEN drop constraint FK_TOKEN_PROCINST ;
alter table JBPM_TOKEN drop constraint FK_TOKEN_NODE ;
alter table JBPM_TOKEN drop constraint FK_TOKEN_PARENT ;
drop index IDX_TKVVARMP_TOKEN  ON JBPM_TOKENVARIABLEMAP ;
drop index IDX_TKVARMAP_CTXT ON JBPM_TOKENVARIABLEMAP;
alter table JBPM_TOKENVARIABLEMAP drop constraint FK_TKVARMAP_TOKEN;
alter table JBPM_TOKENVARIABLEMAP drop constraint FK_TKVARMAP_CTXT ;
drop index IDX_TRANS_PROCDEF  ON JBPM_TRANSITION ;
drop index IDX_TRANSIT_FROM ON JBPM_TRANSITION ;
drop index IDX_TRANSIT_TO  ON JBPM_TRANSITION ;
alter table JBPM_TRANSITION drop constraint FK_TRANSITION_FROM ;
alter table JBPM_TRANSITION drop constraint FK_TRANS_PROCDEF ;
alter table JBPM_TRANSITION drop constraint FK_TRANSITION_TO ;
alter table JBPM_VARIABLEACCESS drop constraint FK_VARACC_PROCST;
alter table JBPM_VARIABLEACCESS drop constraint FK_VARACC_SCRIPT ;
alter table JBPM_VARIABLEACCESS drop constraint FK_VARACC_TSKCTRL ;
alter table JBPM_VARIABLEINSTANCE drop constraint FK_VARINST_PRCINST ;
alter table JBPM_VARIABLEINSTANCE drop constraint FK_VARINST_TKVARMP ;
alter table JBPM_VARIABLEINSTANCE drop constraint FK_VARINST_TK ;
alter table JBPM_VARIABLEINSTANCE drop constraint FK_BYTEINST_ARRAY ;
alter table JBPM_VARIABLEINSTANCE drop constraint FK_VAR_TSKINST ;



DROP TABLE JBPM_ACTION;
DROP TABLE JBPM_BYTEARRAY;
DROP TABLE JBPM_BYTEBLOCK;
DROP TABLE JBPM_COMMENT;
DROP TABLE JBPM_DECISIONCONDITIONS;
DROP TABLE JBPM_DELEGATION;
DROP TABLE JBPM_EVENT;
DROP TABLE JBPM_EXCEPTIONHANDLER;
DROP TABLE JBPM_ID_GROUP;
DROP TABLE JBPM_ID_MEMBERSHIP;
DROP TABLE JBPM_ID_PERMISSIONS;
DROP TABLE JBPM_ID_USER;
DROP TABLE JBPM_JOB;
DROP TABLE JBPM_LOG;
DROP TABLE JBPM_MODULEDEFINITION;
DROP TABLE JBPM_MODULEINSTANCE;
DROP TABLE JBPM_NODE;
DROP TABLE JBPM_POOLEDACTOR;
DROP TABLE JBPM_PROCESSDEFINITION;
DROP TABLE JBPM_PROCESSINSTANCE;
DROP TABLE JBPM_RUNTIMEACTION;
DROP TABLE JBPM_SWIMLANE;
DROP TABLE JBPM_SWIMLANEINSTANCE;
DROP TABLE JBPM_TASK;
DROP TABLE JBPM_TASKACTORPOOL;
DROP TABLE JBPM_TASKCONTROLLER;
DROP TABLE JBPM_TASKINSTANCE;
DROP TABLE JBPM_TOKEN;
DROP TABLE JBPM_TOKENVARIABLEMAP;
DROP TABLE JBPM_TRANSITION;
DROP TABLE JBPM_VARIABLEACCESS;
DROP TABLE JBPM_VARIABLEINSTANCE;
DROP TABLE WF_TRANSITION;
DROP TABLE WF_TASKINS;
DROP TABLE WF_TASKACTOR;
DROP TABLE WF_PROCESSINS;
DROP TABLE WF_PROCESSDEF;
DROP TABLE WF_NODEDEF;
DROP TABLE WF_BOPROCESSDEF;
DROP TABLE WF_AUTHFIELD;
DROP TABLE WF_TASKCONDITION;
DROP TABLE WF_THENSTATETYPE;
DROP TABLE WF_DYNATASKACTOR;
DROP TABLE YWF_PROCESSDEF;

CREATE TABLE JBPM_ACTION (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS CHAR(1) NOT NULL, NAME_ VARCHAR(255) NULL, ISPROPAGATIONALLOWED_ TINYINT NULL, ACTIONEXPRESSION_ VARCHAR(255) NULL, ISASYNC_ TINYINT NULL, REFERENCEDACTION_ NUMERIC(19,0) NULL, ACTIONDELEGATION_ NUMERIC(19,0) NULL, EVENT_ NUMERIC(19,0) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, EXPRESSION_ VARCHAR(4000) NULL, TIMERNAME_ VARCHAR(255) NULL, DUEDATE_ VARCHAR(255) NULL, REPEAT_ VARCHAR(255) NULL, TRANSITIONNAME_ VARCHAR(255) NULL, TIMERACTION_ NUMERIC(19,0) NULL, EVENTINDEX_ INT NULL, EXCEPTIONHANDLER_ NUMERIC(19,0) NULL, EXCEPTIONHANDLERINDEX_ INT NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_BYTEARRAY (ID_ NUMERIC(19,0) IDENTITY NOT NULL, NAME_ VARCHAR(255) NULL, FILEDEFINITION_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_BYTEBLOCK (PROCESSFILE_ NUMERIC(19,0) NOT NULL, BYTES_ VARBINARY(1024) NULL, INDEX_ INT NOT NULL, PRIMARY KEY (PROCESSFILE_, INDEX_));
CREATE TABLE JBPM_COMMENT (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, ACTORID_ VARCHAR(255) NULL, TIME_ DATETIME NULL, MESSAGE_ VARCHAR(4000) NULL, TOKEN_ NUMERIC(19,0) NULL, TASKINSTANCE_ NUMERIC(19,0) NULL, TOKENINDEX_ INT NULL, TASKINSTANCEINDEX_ INT NULL, PRIMARY KEY (ID_))
CREATE TABLE JBPM_DECISIONCONDITIONS (DECISION_ NUMERIC(19,0) NOT NULL, TRANSITIONNAME_ VARCHAR(255) NULL, EXPRESSION_ VARCHAR(255) NULL, INDEX_ INT NOT NULL, PRIMARY KEY (DECISION_, INDEX_));
CREATE TABLE JBPM_DELEGATION (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASSNAME_ VARCHAR(4000) NULL, CONFIGURATION_ VARCHAR(4000) NULL, CONFIGTYPE_ VARCHAR(255) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_EVENT (ID_ NUMERIC(19,0) IDENTITY NOT NULL, EVENTTYPE_ VARCHAR(255) NULL, TYPE_ CHAR(1) NULL, GRAPHELEMENT_ NUMERIC(19,0) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, NODE_ NUMERIC(19,0) NULL, TRANSITION_ NUMERIC(19,0) NULL, TASK_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_))
CREATE TABLE JBPM_EXCEPTIONHANDLER (ID_ NUMERIC(19,0) IDENTITY NOT NULL, EXCEPTIONCLASSNAME_ VARCHAR(4000) NULL, TYPE_ CHAR(1) NULL, GRAPHELEMENT_ NUMERIC(19,0) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, GRAPHELEMENTINDEX_ INT NULL, NODE_ NUMERIC(19,0) NULL, TRANSITION_ NUMERIC(19,0) NULL, TASK_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_))
CREATE TABLE JBPM_ID_GROUP (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, NAME_ VARCHAR(255) NULL, TYPE_ VARCHAR(255) NULL, PARENT_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_ID_MEMBERSHIP (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, NAME_ VARCHAR(255) NULL, ROLE_ VARCHAR(255) NULL, USER_ NUMERIC(19,0) NULL, GROUP_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_ID_PERMISSIONS (ENTITY_ NUMERIC(19,0) NOT NULL, CLASS_ VARCHAR(255) NULL, NAME_ VARCHAR(255) NULL, ACTION_ VARCHAR(255) NULL);
CREATE TABLE JBPM_ID_USER (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, NAME_ VARCHAR(255) NULL, EMAIL_ VARCHAR(255) NULL, PASSWORD_ VARCHAR(255) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_JOB (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, VERSION_ INT NOT NULL, DUEDATE_ DATETIME NULL, PROCESSINSTANCE_ NUMERIC(19,0) NULL, TOKEN_ NUMERIC(19,0) NULL, TASKINSTANCE_ NUMERIC(19,0) NULL, ISSUSPENDED_ TINYINT NULL, ISEXCLUSIVE_ TINYINT NULL, LOCKOWNER_ VARCHAR(255) NULL, LOCKTIME_ DATETIME NULL, EXCEPTION_ VARCHAR(4000) NULL, RETRIES_ INT NULL, NAME_ VARCHAR(255) NULL, REPEAT_ VARCHAR(255) NULL, TRANSITIONNAME_ VARCHAR(255) NULL, ACTION_ NUMERIC(19,0) NULL, GRAPHELEMENTTYPE_ VARCHAR(255) NULL, GRAPHELEMENT_ NUMERIC(19,0) NULL, NODE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_LOG (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, INDEX_ INT NULL, DATE_ DATETIME NULL, TOKEN_ NUMERIC(19,0) NULL, PARENT_ NUMERIC(19,0) NULL, MESSAGE_ VARCHAR(4000) NULL, EXCEPTION_ VARCHAR(4000) NULL, ACTION_ NUMERIC(19,0) NULL, NODE_ NUMERIC(19,0) NULL, ENTER_ DATETIME NULL, LEAVE_ DATETIME NULL, DURATION_ NUMERIC(19,0) NULL, NEWLONGVALUE_ NUMERIC(19,0) NULL, TRANSITION_ NUMERIC(19,0) NULL, CHILD_ NUMERIC(19,0) NULL, SOURCENODE_ NUMERIC(19,0) NULL, DESTINATIONNODE_ NUMERIC(19,0) NULL, VARIABLEINSTANCE_ NUMERIC(19,0) NULL, OLDBYTEARRAY_ NUMERIC(19,0) NULL, NEWBYTEARRAY_ NUMERIC(19,0) NULL, OLDDATEVALUE_ DATETIME NULL, NEWDATEVALUE_ DATETIME NULL, OLDDOUBLEVALUE_ DOUBLE PRECISION NULL, NEWDOUBLEVALUE_ DOUBLE PRECISION NULL, OLDLONGIDCLASS_ VARCHAR(255) NULL, OLDLONGIDVALUE_ NUMERIC(19,0) NULL, NEWLONGIDCLASS_ VARCHAR(255) NULL, NEWLONGIDVALUE_ NUMERIC(19,0) NULL, OLDSTRINGIDCLASS_ VARCHAR(255) NULL, OLDSTRINGIDVALUE_ VARCHAR(255) NULL, NEWSTRINGIDCLASS_ VARCHAR(255) NULL, NEWSTRINGIDVALUE_ VARCHAR(255) NULL, OLDLONGVALUE_ NUMERIC(19,0) NULL, OLDSTRINGVALUE_ VARCHAR(4000) NULL, NEWSTRINGVALUE_ VARCHAR(4000) NULL, TASKINSTANCE_ NUMERIC(19,0) NULL, TASKACTORID_ VARCHAR(255) NULL, TASKOLDACTORID_ VARCHAR(255) NULL, SWIMLANEINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_MODULEDEFINITION (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, NAME_ VARCHAR(4000) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, STARTTASK_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_))
CREATE TABLE JBPM_MODULEINSTANCE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, VERSION_ INT NOT NULL, PROCESSINSTANCE_ NUMERIC(19,0) NULL, TASKMGMTDEFINITION_ NUMERIC(19,0) NULL, NAME_ VARCHAR(255) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_NODE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, NAME_ VARCHAR(255) NULL, DESCRIPTION_ VARCHAR(4000) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, ISASYNC_ TINYINT NULL, ISASYNCEXCL_ TINYINT NULL, ACTION_ NUMERIC(19,0) NULL, SUPERSTATE_ NUMERIC(19,0) NULL, SUBPROCNAME_ VARCHAR(255) NULL, SUBPROCESSDEFINITION_ NUMERIC(19,0) NULL, DECISIONEXPRESSION_ VARCHAR(255) NULL, DECISIONDELEGATION NUMERIC(19,0) NULL, SCRIPT_ NUMERIC(19,0) NULL, SIGNAL_ INT NULL, CREATETASKS_ TINYINT NULL, ENDTASKS_ TINYINT NULL, NODECOLLECTIONINDEX_ INT NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_POOLEDACTOR (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, ACTORID_ VARCHAR(255) NULL, SWIMLANEINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_PROCESSDEFINITION (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, NAME_ VARCHAR(255) NULL, DESCRIPTION_ VARCHAR(4000) NULL, VERSION_ INT NULL, ISTERMINATIONIMPLICIT_ TINYINT NULL, STARTSTATE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_PROCESSINSTANCE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, KEY_ VARCHAR(255) NULL, START_ DATETIME NULL, END_ DATETIME NULL, ISSUSPENDED_ TINYINT NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, ROOTTOKEN_ NUMERIC(19,0) NULL, SUPERPROCESSTOKEN_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_RUNTIMEACTION (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, EVENTTYPE_ VARCHAR(255) NULL, TYPE_ CHAR(1) NULL, GRAPHELEMENT_ NUMERIC(19,0) NULL, PROCESSINSTANCE_ NUMERIC(19,0) NULL, ACTION_ NUMERIC(19,0) NULL, PROCESSINSTANCEINDEX_ INT NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_SWIMLANE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, NAME_ VARCHAR(255) NULL, ACTORIDEXPRESSION_ VARCHAR(255) NULL, POOLEDACTORSEXPRESSION_ VARCHAR(255) NULL, ASSIGNMENTDELEGATION_ NUMERIC(19,0) NULL, TASKMGMTDEFINITION_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_SWIMLANEINSTANCE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, NAME_ VARCHAR(255) NULL, ACTORID_ VARCHAR(255) NULL, SWIMLANE_ NUMERIC(19,0) NULL, TASKMGMTINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_TASK (ID_ NUMERIC(19,0) IDENTITY NOT NULL, NAME_ VARCHAR(255) NULL, DESCRIPTION_ VARCHAR(4000) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, ISBLOCKING_ TINYINT NULL, ISSIGNALLING_ TINYINT NULL, CONDITION_ VARCHAR(255) NULL, DUEDATE_ VARCHAR(255) NULL, PRIORITY_ INT NULL, ACTORIDEXPRESSION_ VARCHAR(255) NULL, POOLEDACTORSEXPRESSION_ VARCHAR(255) NULL, TASKMGMTDEFINITION_ NUMERIC(19,0) NULL, TASKNODE_ NUMERIC(19,0) NULL, STARTSTATE_ NUMERIC(19,0) NULL, ASSIGNMENTDELEGATION_ NUMERIC(19,0) NULL, SWIMLANE_ NUMERIC(19,0) NULL, TASKCONTROLLER_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_TASKACTORPOOL (TASKINSTANCE_ NUMERIC(19,0) NOT NULL, POOLEDACTOR_ NUMERIC(19,0) NOT NULL, PRIMARY KEY (TASKINSTANCE_, POOLEDACTOR_));
CREATE TABLE JBPM_TASKCONTROLLER (ID_ NUMERIC(19,0) IDENTITY NOT NULL, TASKCONTROLLERDELEGATION_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_TASKINSTANCE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, VERSION_ INT NOT NULL, NAME_ VARCHAR(255) NULL, DESCRIPTION_ VARCHAR(4000) NULL, ACTORID_ VARCHAR(255) NULL, CREATE_ DATETIME NULL, START_ DATETIME NULL, END_ DATETIME NULL, DUEDATE_ DATETIME NULL, PRIORITY_ INT NULL, ISCANCELLED_ TINYINT NULL, ISSUSPENDED_ TINYINT NULL, ISOPEN_ TINYINT NULL, ISSIGNALLING_ TINYINT NULL, ISBLOCKING_ TINYINT NULL, TASK_ NUMERIC(19,0) NULL, TOKEN_ NUMERIC(19,0) NULL, PROCINST_ NUMERIC(19,0) NULL, SWIMLANINSTANCE_ NUMERIC(19,0) NULL, TASKMGMTINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_TOKEN (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, NAME_ VARCHAR(255) NULL, START_ DATETIME NULL, END_ DATETIME NULL, NODEENTER_ DATETIME NULL, NEXTLOGINDEX_ INT NULL, ISABLETOREACTIVATEPARENT_ TINYINT NULL, ISTERMINATIONIMPLICIT_ TINYINT NULL, ISSUSPENDED_ TINYINT NULL, LOCK_ VARCHAR(255) NULL, NODE_ NUMERIC(19,0) NULL, PROCESSINSTANCE_ NUMERIC(19,0) NULL, PARENT_ NUMERIC(19,0) NULL, SUBPROCESSINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_TOKENVARIABLEMAP (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VERSION_ INT NOT NULL, TOKEN_ NUMERIC(19,0) NULL, CONTEXTINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_TRANSITION (ID_ NUMERIC(19,0) IDENTITY NOT NULL, NAME_ VARCHAR(255) NULL, DESCRIPTION_ VARCHAR(4000) NULL, PROCESSDEFINITION_ NUMERIC(19,0) NULL, FROM_ NUMERIC(19,0) NULL, TO_ NUMERIC(19,0) NULL, CONDITION_ VARCHAR(255) NULL, FROMINDEX_ INT NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_VARIABLEACCESS (ID_ NUMERIC(19,0) IDENTITY NOT NULL, VARIABLENAME_ VARCHAR(255) NULL, ACCESS_ VARCHAR(255) NULL, MAPPEDNAME_ VARCHAR(255) NULL, SCRIPT_ NUMERIC(19,0) NULL, PROCESSSTATE_ NUMERIC(19,0) NULL, TASKCONTROLLER_ NUMERIC(19,0) NULL, INDEX_ INT NULL, PRIMARY KEY (ID_));
CREATE TABLE JBPM_VARIABLEINSTANCE (ID_ NUMERIC(19,0) IDENTITY NOT NULL, CLASS_ CHAR(1) NOT NULL, VERSION_ INT NOT NULL, NAME_ VARCHAR(255) NULL, CONVERTER_ CHAR(1) NULL, TOKEN_ NUMERIC(19,0) NULL, TOKENVARIABLEMAP_ NUMERIC(19,0) NULL, PROCESSINSTANCE_ NUMERIC(19,0) NULL, BYTEARRAYVALUE_ NUMERIC(19,0) NULL, DATEVALUE_ DATETIME NULL, DOUBLEVALUE_ DOUBLE PRECISION NULL, LONGIDCLASS_ VARCHAR(255) NULL, LONGVALUE_ NUMERIC(19,0) NULL, STRINGIDCLASS_ VARCHAR(255) NULL, STRINGVALUE_ VARCHAR(4000) NULL, TASKINSTANCE_ NUMERIC(19,0) NULL, PRIMARY KEY (ID_));


CREATE TABLE WF_AUTHFIELD
(
  AUTHFIELDID        VARCHAR(36) NOT NULL,
  NODEID             NUMERIC(19,0),
  FIELDNAME          VARCHAR(50),
  FIELDDESC          VARCHAR(100),
  ALLOWOPERATIONTYPE VARCHAR(2),
  BOID               VARCHAR(50),
  PRIMARY KEY (AUTHFIELDID)
);
CREATE TABLE WF_BOPROCESSDEF
(
  BPDEFID               VARCHAR(36) NOT NULL,
  APPMODEL              VARCHAR(50) NOT NULL,
  BPNAME                VARCHAR(100) NOT NULL,
  PROCESSDEFINITIONNAME VARCHAR(200) NOT NULL,
  BOID                  VARCHAR(100),
  PROCESSTYPE           VARCHAR(10) NOT NULL,
  CREATOR               VARCHAR(36),
  CREATETIME            VARCHAR(24),
  BPDESC                NVARCHAR(500) NOT NULL,
  LASTMODIFYER          VARCHAR(36),
  LASTMODIFYTIME        VARCHAR(24),
  MEMO                  VARCHAR(500),
  BOMETHODID            VARCHAR(36),
  ORGANIZATIONID        VARCHAR(36),
   ISDEFAULT             VARCHAR(1),
  PRIMARY KEY (BPDEFID)
);
CREATE TABLE WF_NODEDEF
(
  NODEDEFID          VARCHAR(36) NOT NULL,
  NODEID             NUMERIC(19,0),
  BOID               VARCHAR(50),
  NODEDEFINITIONNAME VARCHAR(50),
  EXELOGICTYPE       VARCHAR(1),
  BOMETHODID         VARCHAR(50),
  AUTOSIGNAL         VARCHAR(1),
  EXELOGIC           VARCHAR(500),
  EXTPROCESSID       VARCHAR(36) NOT NULL,
  EXAMINETYPE        VARCHAR(1),
  PROCESSID          NUMERIC(19),
  ISSENDMAIL         VARCHAR(1) default '0',
  PRIMARY KEY (NODEDEFID)
);
CREATE TABLE WF_PROCESSDEF
(
  EXTPROCESSID          VARCHAR(36) NOT NULL,
  PROCESSDEFINITIONNAME VARCHAR(100) NOT NULL,
  PROCESSID             NUMERIC(19,0) NOT NULL,
  VERSION               VARCHAR(3) NOT NULL,
  ACTIVE                VARCHAR(4) DEFAULT 0 NOT NULL,
  PRIMARY KEY (EXTPROCESSID)
);
CREATE TABLE WF_PROCESSINS
(
  PROCESSINSID          VARCHAR(36) NOT NULL,
  PROCESSID             NUMERIC(19,0),
  BUSINESSID            VARCHAR(36),
  DEPARTMENTID          VARCHAR(36),
  BOID                  VARCHAR(50),
  PROCESSURL            VARCHAR(200),
  INSCREATETIME         VARCHAR(14),
  INSENDTIME            VARCHAR(14),
  ENDNODENAME           VARCHAR(50),
  BUSINESSNOTE          VARCHAR(1000),
  PARENTCOMMONPROCESSID VARCHAR(36),
  CREATORID             VARCHAR(36),
  CREATORNAME           VARCHAR(100),
  PRIMARY KEY (PROCESSINSID)
);
CREATE TABLE WF_TASKACTOR
(
  TASKACTORID VARCHAR(36) NOT NULL,
  NODEID      NUMERIC(19,0),
  ACTORID     VARCHAR(36),
  ACTORTYPE   VARCHAR(1),
  ACTORNAME   VARCHAR(40),
  ASSIGNLOGIC VARCHAR(50),
  PROCESSID   NUMERIC(19),
  PRIMARY KEY (TASKACTORID)
);
CREATE TABLE WF_TASKINS
(
  TASKINSID       VARCHAR(36) NOT NULL,
  TASKID          NUMERIC(19,0),
  PROCESSID       NUMERIC(19,0),
  BUSINESSID      VARCHAR(36),
  TASKNAME        VARCHAR(50),
  TASKDESCRIPTION VARCHAR(100),
  TASKCREATETIME  VARCHAR(14),
  TASKENDTIME     VARCHAR(14),
  EXAMINE         VARCHAR(200),
  EXAMINEPERSON   VARCHAR(50),
  EXAMINERESULT   VARCHAR(500),
  WITHTIME        NVARCHAR(200),
  PRIMARY KEY (TASKINSID)
);
CREATE TABLE WF_TRANSITION
(
  EXTENDTRANSITIONID VARCHAR(36) NOT NULL,
  TRANSITIONNAME     VARCHAR(50) NOT NULL,
  NODEID             VARCHAR(50) NOT NULL,
  CONDITION          VARCHAR(1000) NOT NULL,
  NEXTNODENAME       VARCHAR(100),
  CONDITIONTYPE      VARCHAR(1) NOT NULL,
  PROCESSID          NUMERIC(19,0),
  JSONCONDITION      VARCHAR(1000) NOT NULL,
  PRIMARY KEY (EXTENDTRANSITIONID)
);
CREATE TABLE WF_TASKCONDITION
(
  TSKACTCONDID      VARCHAR(72) NOT NULL,
  PROCESSID         NUMERIC(19,0),
  NODEID            NUMERIC(19,0),
  IFSTATEMENT       VARCHAR(2000),
  THENSTATEMENTTYPE VARCHAR(20),
  THENSTATEMENT     VARCHAR(1000),
  IFSTATEMENTJSON   VARCHAR(2000),
  THENSTATEMENTTEXT VARCHAR(1000),
  THENSTATEMENTTYPEID VARCHAR(36),
  PRIMARY KEY (TSKACTCONDID)
);


CREATE TABLE WF_THENSTATETYPE
(
  TYPEID         VARCHAR(36) NOT NULL,
  STATEMENT      VARCHAR(500) NOT NULL,
  TYPEDESC       VARCHAR(100) NOT NULL,
  VALUEFECTHTYPE CHAR(1) NOT NULL,
  SHLPIDCOLUMN   VARCHAR(100) NOT NULL,
  SHLPTEXTCOLUMN VARCHAR(100) NOT NULL,
  SHLPNAME       VARCHAR(100) NOT NULL,
  PRIMARY KEY (TYPEID)
);
CREATE TABLE WF_DYNATASKACTOR
(
  DYNATASKID VARCHAR(36) NOT NULL,
  TASKID     VARCHAR(36) NOT NULL,
  ACTORID    VARCHAR(36) NOT NULL,
  BUSINESSID VARCHAR(36) NOT NULL,
  ACTORTYPE  VARCHAR(2),
  ACTORNAME  VARCHAR(50),
  PRIMARY KEY (DYNATASKID)
);

CREATE TABLE YWF_PROCESSDEF
(
  PROCESSDEFID   VARCHAR(108) DEFAULT ' ' NOT NULL,
  PROCESSNAME    VARCHAR(120) DEFAULT ' ' NOT NULL,
  PROCESSDESC    VARCHAR(150),
  VERSION        NUMERIC(3) DEFAULT 0 NOT NULL,
  ISPUBLIC       VARCHAR(3) DEFAULT '0' NOT NULL,
  CREATOR        VARCHAR(96),
  CREATETIME     VARCHAR(36),
  LASTMODIFYER   VARCHAR(108),
  LASTMODIFYTIME VARCHAR(36),
  DEFDOCUMENT    [varbinary](max),
  POSDOCUMENT    [varbinary](max),
  PRIMARY KEY (PROCESSDEFID)
);

CREATE VIEW V_WF_CURRENT_JOB AS
SELECT DISTINCT PINS.PROCESSID,
       PINS.BUSINESSID,
       PINS.BOID,
       PINS.PROCESSURL,
       PINS.INSCREATETIME,
       PINS.INSENDTIME,
       PINS.ENDNODENAME,
       PINS.BUSINESSNOTE,
       PINS.PARENTCOMMONPROCESSID,
       PINS.CREATORID,
       PINS.CREATORNAME,
       NODE.ID_ NODEID,
       TACT.ACTORID,
       TACT.ACTORTYPE,
       TACT.ACTORNAME,
       TACT.ASSIGNLOGIC,
      JTINS.NAME_,
      JTINS.START_,
      JTINS.TASK_,
      JTINS.CREATE_ TASKCREATETIME,
      JTINS.ID_ AS TASK_ID
FROM  WF_PROCESSINS PINS,
      JBPM_PROCESSINSTANCE JPINS,
      JBPM_TASKINSTANCE JTINS,
      JBPM_TASK TASK,
      JBPM_NODE NODE,
      WF_TASKACTOR TACT
WHERE  PINS.PROCESSID = JPINS.ID_
  AND JPINS.ID_ = JTINS.PROCINST_
  AND JTINS.TASK_ = TASK.ID_
  AND NODE.ID_ = TASK.TASKNODE_
  AND NODE.ID_ = TACT.NODEID
  AND JTINS.END_ IS NULL

  UNION
  SELECT DISTINCT PINS.PROCESSID,
       PINS.BUSINESSID,
       PINS.BOID,
       PINS.PROCESSURL,
       PINS.INSCREATETIME,
       PINS.INSENDTIME,
       PINS.ENDNODENAME,
       PINS.BUSINESSNOTE,
       PINS.PARENTCOMMONPROCESSID,
       PINS.CREATORID,
       PINS.CREATORNAME,
       NODE.ID_ NODEID,
       TACT.ACTORID,
       TACT.ACTORTYPE,
       TACT.ACTORNAME,
       '' ASSIGNLOGIC,
      JTINS.NAME_,
      JTINS.START_,
      JTINS.TASK_,
      JTINS.CREATE_ TASKCREATETIME,
      JTINS.ID_ AS TASK_ID
FROM  WF_PROCESSINS PINS,
      JBPM_PROCESSINSTANCE JPINS,
      JBPM_TASKINSTANCE JTINS,
      JBPM_TASK TASK,
      JBPM_NODE NODE,
      WF_DYNATASKACTOR TACT
WHERE  PINS.PROCESSID = JPINS.ID_
  AND JPINS.ID_ = JTINS.PROCINST_
  AND JTINS.TASK_ = TASK.ID_
  AND NODE.ID_ = TASK.TASKNODE_
  AND TASK.ID_ = TACT.TASKID
  AND TACT.BUSINESSID = PINS.BUSINESSID
  AND JTINS.END_ IS NULL
  UNION
  SELECT DISTINCT PINS.PROCESSID,
       PINS.BUSINESSID,
       PINS.BOID,
       PINS.PROCESSURL,
       PINS.INSCREATETIME,
       PINS.INSENDTIME,
       PINS.ENDNODENAME,
       PINS.BUSINESSNOTE,
       PINS.PARENTCOMMONPROCESSID,
       PINS.CREATORID,
       PINS.CREATORNAME,
       NODE.ID_ NODEID,
       TACT.TOUSERID AS ACTORID,
       '1' AS ACTORTYPE,
       TACT.TOUSERID AS ACTORNAME,
       '' AS ASSIGNLOGIC,
      JTINS.NAME_,
      JTINS.START_,
      JTINS.TASK_,
      JTINS.CREATE_ TASKCREATETIME,
      JTINS.ID_ AS TASK_ID
FROM  WF_PROCESSINS PINS,
      JBPM_PROCESSINSTANCE JPINS,
      JBPM_TASKINSTANCE JTINS,
      JBPM_TASK TASK,
      JBPM_NODE NODE,
      YUSERAUTHMOVE TACT
WHERE  PINS.PROCESSID = JPINS.ID_
  AND JPINS.ID_ = JTINS.PROCINST_
  AND JTINS.TASK_ = TASK.ID_
  AND NODE.ID_ = TASK.TASKNODE_
  AND NODE.ID_ = TACT.RESOURCEID
  AND JTINS.END_ IS NULL
  AND TACT.RESOURCETYPE='4';



CREATE VIEW V_WF_HISTORY_JOB AS
SELECT DISTINCT TPI.PROCESSID,
      TPI.BUSINESSID,
      TPI.DEPARTMENTID,
      TPI.BOID,
      TPI.INSCREATETIME,
      TPI.INSENDTIME,
      TPI.ENDNODENAME,
      TPI.BUSINESSNOTE,
      TA.ACTORID,
      TA.ACTORTYPE,
      TA.ACTORNAME,
      PI.END_,
      PI.START_
FROM WF_PROCESSINS TPI,
      JBPM_PROCESSINSTANCE PI,
      WF_TASKACTOR TA
WHERE  TPI.PROCESSID = PI.ID_
  AND PI.END_ IS NOT NULL
  AND PI.ID_ = TA.PROCESSID;