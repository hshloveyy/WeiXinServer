<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                  http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd">

    <!--业务预警调度服务-->
    <bean id="advanceWarnObjectService"
        class="com.infolion.xdss3.advanceWarn.service.AdvanceWarnObjectService"/>

    <!-- 业务预警调度服务  执行器 -->
    <bean id="advanceWarnObjectServiceJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="advanceWarnObjectService" />
        <property name="targetMethod" value="doAlarmCheckWork" />
    </bean>
    <!-- 业务预警调度服务  执行器  触发器 -->
    <bean id="advanceWarnObjectServiceJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="advanceWarnObjectServiceJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 0 0 ? * *" />
    </bean>
    
    <!--待办事项调度服务-->
    <bean id="waitForTransactWorkService"
        class="com.infolion.sapss.waitForTransactWork.service.WaitForTransactWorkService"/>
     <!-- 待办事项调度服务  执行器 -->
    <bean id="waitForTransactWorkServiceJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="waitForTransactWorkService" />
        <property name="targetMethod" value="querywaitForTransactWork" />
    </bean>
     <!-- 待办事项调度服务  执行器  触发器 -->
    <bean id="waitForTransactWorkServiceJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="waitForTransactWorkServiceJob" />
        <!-- 在每天下午4点运行 -->
        <property name="cronExpression" value="0 0 16 ? * *" />
    </bean>
    
    
    <!--日历触发工作流  执行器  触发器-->
    <bean id="calActivityTriggerWorkFlowService"
        class="com.infolion.platform.calendar.workflow.CalActivityTriggerWorkFlowService"/>
    <!-- 日历触发工作流  执行器  触发器 -->
    <bean id="calActivityTriggerWorkFlowServiceJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="calActivityTriggerWorkFlowService" />
        <property name="targetMethod" value="tiggerWorkFlow" />
    </bean>
    <!-- 日历触发工作流  执行器  触发器 -->
    <bean id="calActivityTriggerWorkFlowServiceJobTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <property name="jobDetail" ref="calActivityTriggerWorkFlowServiceJob" />
        <!-- 1 seconds -->
        <property name="startDelay" value="1000" />
        <!-- repeat every 10 seconds -->
        <property name="repeatInterval" value="100000" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?
        <property name="cronExpression" value="0 0/1 11 * * ?" />-->
    </bean>
    
    
    <!--主数据同步调度服务-->
    <bean id="syncMasterDataService"
        class="com.infolion.xdss3.masterData.service.SyncMasterDataService"/>

    <!-- 供应商主数据调度服务  执行器 -->
    <bean id="supplierSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeSupplier" />
    </bean>
    <!-- 供应商主数据调度服务  执行器  触发器 -->
    <bean id="supplierSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="supplierSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 10 0 ? * *" />
    </bean>
    
    <!-- 客户主数据调度服务  执行器 -->
    <bean id="customerSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeCustomer" />
    </bean>
    <!-- 客户主数据调度服务  执行器  触发器 -->
    <bean id="customerSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="customerSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 20 0 ? * *" />
    </bean>
    
    <!-- 会计科目数据调度服务  执行器 -->
    <bean id="hkontSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeHkont" />
    </bean>
    <!-- 会计科目数据调度服务  执行器  触发器 -->
    <bean id="hkontSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="hkontSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 30 1 ? * *" />
    </bean>
    
    <!-- 现金流量项数据调度服务  执行器 -->
    <bean id="cashFlowItemSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeCashFlowItem" />
    </bean>
    <!-- 现金流量项数据调度服务  执行器  触发器 -->
    <bean id="cashFlowItemSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="cashFlowItemSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 40 1 ? * *" />
    </bean>
    
    <!-- 成本中心数据调度服务  执行器 -->
    <bean id="costCenterSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeCostCenter" />
    </bean>
    <!-- 成本中心数据调度服务  执行器  触发器 -->
    <bean id="costCenterSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="costCenterSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 50 1 ? * *" />
    </bean>
    
    <!-- 利润中心数据调度服务  执行器 -->
    <bean id="prctrSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizePrctr" />
    </bean>
    <!-- 利润中心数据调度服务  执行器  触发器 -->
    <bean id="prctrSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="prctrSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 0 2 ? * *" />
    </bean>
    
    <!-- 开票业务数据调度服务  执行器 -->
    <bean id="vbrkSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeVbrk" />
    </bean>
    <!-- 开票业务数据调度服务  执行器  触发器 -->
    <bean id="vbrkSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="vbrkSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 10 2 ? * *" />
    </bean>
    
    <!-- 发票校验数据调度服务  执行器 -->
    <bean id="invoiceVerifySyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeInvoiceVerify" />
    </bean>
    <!-- 发票校验数据调度服务  执行器  触发器 -->
    <bean id="invoiceVerifySyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="invoiceVerifySyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 20 2 ? * *" />
    </bean>
    
    <!-- 未清供应商数据调度服务  执行器 -->
    <bean id="unclearVendorSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeUnclearVendor" />
    </bean>
    <!-- 未清供应商数据调度服务  执行器  触发器 -->
    <bean id="unclearVendorSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="unclearVendorSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 40 2 ? * *" />
    </bean>
    
    <!-- 未清客户数据调度服务  执行器 -->
    <bean id="unclearCustomerSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeUnclearCustomer" />
    </bean>
    <!-- 未清客户数据调度服务  执行器  触发器 -->
    <bean id="unclearCustomerSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="unclearCustomerSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 50 2 ? * *" />
    </bean>
    
    <!-- 公司数据调度服务  执行器 -->
    <bean id="companySyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeCompany" />
    </bean>
    <!-- 公司数据调度服务  执行器  触发器 -->
    <bean id="companySyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="companySyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 0 3 ? * *" />
    </bean>
    
    <!-- 部门数据调度服务  执行器 -->
    <bean id="deptSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeDept" />
    </bean>
    <!-- 部门数据调度服务  执行器  触发器 -->
    <bean id="deptSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="deptSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 10 3 ? * *" />
    </bean>
    
    <!-- 物料组数据调度服务  执行器 -->
    <!--bean id="matGroupSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean"-->
        <!-- property name="targetObject" ref="syncMasterDataService" / -->
        <!-- property name="targetMethod" value="_synchronizeMatGroup" /-->
    <!--/bean-->
    <!-- 物料组数据调度服务  执行器  触发器 -->
    <!-- bean id="matGourpSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="matGroupSyncJob" / -->
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <!--property name="cronExpression" value="0 20 3 ? * *" /-->
    <!--/bean-->
    
    <!--供应商主数据调度服务  执行器  触发器  测试 -->
    <bean id="testSupplierSyncJobTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <!-- see the example of method invoking job above -->
        <property name="jobDetail" ref="supplierSyncJob" />
        <!-- 1 seconds -->
        <property name="startDelay" value="1000" />
        <!-- repeat every 10 seconds -->
        <property name="repeatInterval" value="10000000000000" />
    </bean>    
    <!--业务预警调度服务  执行器  测试 -->
    <bean id="testAdvanceWarnObjectServiceJobTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <!-- see the example of method invoking job above -->
        <property name="jobDetail" ref="advanceWarnObjectServiceJob" />
        <!-- 1 seconds -->
        <property name="startDelay" value="1000" />
        <!-- repeat every 10 seconds -->
        <property name="repeatInterval" value="10000000000000" />
    </bean>
    <!-- 三大报表定时器 -->
    <bean id="viewToTable" class="com.infolion.platform.console.quartzJob.ViewToTableJob">
		<property name="jdbcTemplate" ref="jdbcTemplate"/>
	</bean>
    <bean id="methodInvokingJobDetail"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject">
        	<ref bean="viewToTable"/>
        </property>
        <property name="targetMethod">
        	<value>execute</value>
        </property>
    </bean>

    <bean id="cronTrigger" class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail">
            <ref bean="methodInvokingJobDetail"/>
        </property>
        <property name="cronExpression">
            <value>0 30 2 * * ?</value><!--晚上0点开始执行-->
        </property>
    </bean>
    
    <!-- 汇率主数据调度服务  执行器 -->
    <bean id="tcurrSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeTcurr" />
    </bean>
    <!-- 汇率主数据调度服务  执行器  触发器 -->
    <bean id="tcurrSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="tcurrSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 30 3 ? * *" />
    </bean>
    
    <!--浮动盈亏调度服务-->
    <bean id="profitLossService"
        class="com.infolion.xdss3.profitLoss.service.ProfitLossService"/>
    <!-- 浮动盈亏调度服务  执行器 -->
    <bean id="profitLossServiceJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="profitLossService" />
        <property name="targetMethod" value="reloadProfitloss" />
    </bean>
    <!-- 浮动盈亏调度服务  执行器  触发器 -->
    <bean id="profitLossServiceJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="profitLossServiceJob" />
        <!-- 在每个月8号晚上23:00执行  -->
        <property name="cronExpression" value="0 0 23 6 * ?" />
    </bean>
    
    <!-- 更新外围客户未清抬头数据的ISCLEARED状态调度服务  执行器 -->
    <bean id="allCustomerTitleStateSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_syncAllCustomerTitleState" />
    </bean>
    <!-- 更新外围客户未清抬头数据的ISCLEARED状态  执行器  触发器 -->
    <bean id="allCustomerTitleStateSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="allCustomerTitleStateSyncJob" />
        <property name="cronExpression" value="0 50 3 ? * *" />
    </bean>
    
    <!-- 更新外围供应商未清抬头数据的ISCLEARED状态调度服务  执行器 -->
    <bean id="allSupplierTitleStateSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_syncAllSupplierTitleState" />
    </bean>
    <!-- 更新外围供应商未清抬头数据的ISCLEARED状态  执行器  触发器 -->
    <bean id="allSupplierTitleStateSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="allSupplierTitleStateSyncJob" />
        <property name="cronExpression" value="0 0 4 ? * *" />
    </bean>
    
     <!-- 同步凭证数据调度服务  执行器 -->
    <bean id="bsegSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeBseg" />
    </bean>
    <!-- 同步凭证数据调度服务  执行器  触发器 -->
    <bean id="bsegSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="bsegSyncJob" />
        <!-- 在每天凌晨4点30运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 30 4 ? * *" />
    </bean>
    
    <bean id="ageAnalysisService"
        class="com.infolion.xdss3.ageAnalysis.service.AgeAnalysisService"/>
        
     <!-- 同步凭证数据到sap调度服务  执行器 -->
    <bean id="setAgeVoucherJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ageAnalysisService" />
        <property name="targetMethod" value="setAgeVoucher" />
    </bean>
    <!-- 同步凭证数据到sap调度服务  执行器  触发器 -->
    <bean id="setAgeVoucherJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="setAgeVoucherJob" />
        <!-- 在每天凌晨4点40运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 40 4 ? * *" />
    </bean>
        
        
      <!-- 同步开票数据到sap调度服务  执行器 -->
    <bean id="setAgeInvoiceJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ageAnalysisService" />
        <property name="targetMethod" value="setAgeInvoice" />
    </bean>
    <!-- 同步开票数据到sap调度服务  执行器  触发器 -->
    <bean id="setAgeInvoiceJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="setAgeInvoiceJob" />
        <!-- 在每天凌晨5点00运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 00 5 ? * *" />
    </bean>
    
     <!-- 同步出口外汇数据到sap调度服务  执行器 -->
    <bean id="setAgeExportJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="ageAnalysisService" />
        <property name="targetMethod" value="setAgeExport" />
    </bean>
    <!-- 同步开票数据到sap调度服务  执行器  触发器 -->
    <bean id="setAgeExportJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="setAgeExportJob" />
        <!-- 在每天凌晨5点00运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 20 5 ? * *" />
    </bean>
    
    <!-- 未清供应商数据调度服务其他公司  执行器 -->
    <bean id="unclearVendorOthersSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeUnclearVendorOthers" />
    </bean>
    <!-- 未清供应商数据调度服务其他公司  执行器  触发器 -->
    <bean id="unclearVendorOthersSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="unclearVendorOthersSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 40 5 ? * *" />
    </bean>
    
    <!-- 未清客户数据调度服务其他公司  执行器 -->
    <bean id="unclearCustomerOthersSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_synchronizeUnclearCustomerOthers" />
    </bean>
    <!-- 未清客户数据调度服务其他公司  执行器  触发器 -->
    <bean id="unclearCustomerOthersSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="unclearCustomerOthersSyncJob" />
        <!-- 在每天凌晨0点运行 0 0 0 * * ?-->
        <property name="cronExpression" value="0 50 5 ? * *" />
    </bean>
    
    <!-- 更新外围客户未清抬头数据的ISCLEARED状态调度服务  执行器 -->
    <bean id="allCustomerOthersTitleStateSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_syncAllCustomerOthersTitleState" />
    </bean>
    <!-- 更新外围客户未清抬头数据的ISCLEARED状态  执行器  触发器 -->
    <bean id="allCustomerOthersTitleStateSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="allCustomerOthersTitleStateSyncJob" />
        <property name="cronExpression" value="0 0 6 ? * *" />
    </bean>
    
    <!-- 更新外围供应商未清抬头数据的ISCLEARED状态调度服务  执行器 -->
    <bean id="allSupplierOthersTitleStateSyncJob"
        class="org.springframework.scheduling.quartz.MethodInvokingJobDetailFactoryBean">
        <property name="targetObject" ref="syncMasterDataService" />
        <property name="targetMethod" value="_syncAllSupplierOthersTitleState" />
    </bean>
    <!-- 更新外围供应商未清抬头数据的ISCLEARED状态  执行器  触发器 -->
    <bean id="allSupplierOthersTitleStateSyncJobTrigger"
        class="org.springframework.scheduling.quartz.CronTriggerBean">
        <property name="jobDetail" ref="allSupplierOthersTitleStateSyncJob" />
        <property name="cronExpression" value="0 20 6 ? * *" />
    </bean>
    
      <!-- 执行器  触发器  测试 -->
    <bean id="testSyncJobTrigger"
        class="org.springframework.scheduling.quartz.SimpleTriggerBean">
        <!-- see the example of method invoking job above -->
        <property name="jobDetail" ref="setAgeVoucherJob" />
        <!-- 1 seconds -->
        <property name="startDelay" value="1000" />
        <!-- repeat every 10 seconds -->
        <property name="repeatInterval" value="10000000000000" />
    </bean>  
	<!-- 定时器调度工厂-->
	<bean
		class="org.springframework.scheduling.quartz.SchedulerFactoryBean">
		<property name="triggers">
			<list>
                <ref bean="advanceWarnObjectServiceJobTrigger" />                
                <!--  <ref bean="testAdvanceWarnObjectServiceJobTrigger" />
                <ref bean="calActivityTriggerWorkFlowServiceJobTrigger" />-->
                <ref bean="supplierSyncJobTrigger" />
                <ref bean="customerSyncJobTrigger" /> 
                <ref bean="hkontSyncJobTrigger" />
                <ref bean="cashFlowItemSyncJobTrigger" /> 
                <ref bean="costCenterSyncJobTrigger" />
                <ref bean="prctrSyncJobTrigger" /> 
                <ref bean="vbrkSyncJobTrigger" />
                <ref bean="invoiceVerifySyncJobTrigger" /> 
                <ref bean="unclearVendorSyncJobTrigger" />
                <ref bean="unclearCustomerSyncJobTrigger" /> 
                <!-- 
                <ref bean="unclearVendorOthersSyncJobTrigger" />
                <ref bean="unclearCustomerOthersSyncJobTrigger" /> 
                -->
                <ref bean="companySyncJobTrigger" />
                <ref bean="deptSyncJobTrigger" /> 
                <ref bean="profitLossServiceJobTrigger"/>
                <ref bean="allCustomerTitleStateSyncJobTrigger"/>
                <ref bean="allSupplierTitleStateSyncJobTrigger"/>
                 <!--
                <ref bean="allCustomerOthersTitleStateSyncJobTrigger"/>
                <ref bean="allSupplierOthersTitleStateSyncJobTrigger"/>
                -->
                <!-- ref bean="matGourpSyncJobTrigger" / -->
                <ref local="cronTrigger"/>
                <ref local="tcurrSyncJobTrigger"/>
                <!--   <ref local="bsegSyncJobTrigger"/> -->
                 <ref local="setAgeVoucherJobTrigger"/>
                 <ref local="setAgeInvoiceJobTrigger"/>
                  <ref local="setAgeExportJobTrigger"/>
                   <ref bean="waitForTransactWorkServiceJobTrigger" /> 
                 <!--    <ref local="testSyncJobTrigger"/>--> 
                <!-- <ref bean="testSupplierSyncJobTrigger" />-->
                <!--<ref bean="testAdvanceWarnObjectServiceJobTrigger" /> -->
			</list>
		</property>
	</bean>
</beans>
