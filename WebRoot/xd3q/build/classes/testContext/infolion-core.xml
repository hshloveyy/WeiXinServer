<?xml version="1.0" encoding="UTF-8" ?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.5.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.5.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd">

	<!-- 系统参数,应用中通过EasyApplicationContextUtils.getSysParam()方法取得 -->
	<util:map id="sysParams" map-class="java.util.TreeMap">
		<!-- Web应用的地址-->
		<entry key="webAppPath" value="http://192.168.39.204:8000/bdp"/>
		<!--是否快速启动，在开发阶段可以设置为true，部署阶段则关闭，以提高第一次访问页面的速度 -->
		<entry key="fastLaunch" value="true"/>
	</util:map>

	<!-- 包的注解扫描 -->
	<context:component-scan base-package="com.infolion.platform" />
	<context:component-scan base-package="com.infolion" />
	<!--配置数据源-->
	<context:property-placeholder location="classpath:config/jdbc.properties" />
	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClassName}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
	</bean>
    
	<bean id="nactiveJdbcExtrator" class="org.springframework.jdbc.support.nativejdbc.CommonsDbcpNativeJdbcExtractor"
		lazy-init="true"/>
	<!-- LOB处理器 -->
	<bean id="lobHandler"
		class="org.springframework.jdbc.support.lob.OracleLobHandler"
		lazy-init="true">
		<property name="nativeJdbcExtractor" ref="nactiveJdbcExtrator"/>
	</bean>
    
	<bean id="multipartResolver"  class="org.springframework.web.multipart.commons.CommonsMultipartResolver">  
		<!-- 设置上传文件的最大尺寸为20MB -->
		<property name="maxUploadSize">  
			<value>20971520</value>  
		</property>  
	</bean>  
	<!--
			<bean id="dataSource"
			class="net.sourceforge.jtds.jdbcx.JtdsDataSource"> <property
			name="serverName" value="127.0.0.1"/> <property name="useCursors"
			value="true"/> <property name="databaseName" value="xmpt"/> <property
			name="user" value="${jdbc.username}"/> <property name="password"
			value="${jdbc.password}"/> </bean>
		-->
	<!-- //////////////////////////////////////////////// -->

	<!-- //////////////////及Spring JDBC模板//////////  -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate" >
		<property name="dataSource" ref="dataSource"/>
	</bean>
	
	<!-- //////////////////Hibernate模板及事务配置（基于AOP）//////////  -->

	<!-- Hibernate Session工厂 -->
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="lobHandler" ref="lobHandler"/>
		<property name="entityInterceptor">
			<bean class="com.infolion.platform.dpframework.core.domain.DomainInterceptor"/>
		</property>
		<property name="packagesToScan" value="com.infolion.**.domain"/>        
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.dialect">org.hibernate.dialect.Oracle9iDialect</prop>
				<!--
						<prop
						key="hibernate.dialect">org.hibernate.dialect.SQLServerDialect</prop>
					-->
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.cache.provider_class">org.hibernate.cache.HashtableCacheProvider</prop>
			</props>
		</property>
	</bean>
    
	<!-- Hibernate 模板 -->
	<bean id="hibernateTemplate" class="org.springframework.orm.hibernate3.HibernateTemplate">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>

	<!-- ////////事务管理器及拦截器配置///////////// -->
	<!-- Hibernate事务管理器 -->
	<bean id="txManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
		<property name="dataSource" ref="dataSource"/>
	</bean>
	<aop:aspectj-autoproxy proxy-target-class="true"/>
	<!-- 通过AOP配置的事务管理增强 -->
	<aop:config proxy-target-class="true">
		<aop:pointcut id="serviceMethod"
			expression="within(com.infolion.platform.dpframework.core.service.BaseService+)" />
		<aop:advisor pointcut-ref="serviceMethod" advice-ref="txAdvice" />
	</aop:config>
	<!-- Hibernate事务管理增强 -->
	<tx:advice id="txAdvice" transaction-manager="txManager">
		<tx:attributes>
			<tx:method name="*"/>
		</tx:attributes>
	</tx:advice>
	<!-- ////////B1接口配置///////////// -->
	<!-- B1装配器工厂 -->
	<bean id="b1AssemblerFactory" class="com.infolion.platform.dpframework.outsideInterface.dao.B1AssemblerFactory">
		<property name="assemblerMap">
			<map>
				<!--
					<entry>
						<key>
							<value>BusinessPartnersAssembler</value>
						</key>
						<bean class="com.infolion.platform.dpframework.outsideInterface.dao.assemblers.BusinessPartnersAssembler"/>
					</entry>
					<entry>
						<key>
							<value>ItemsAssembler</value>
						</key>
						<bean class="com.infolion.platform.dpframework.outsideInterface.dao.assemblers.ItemsAssembler"/>
					</entry>
					<entry>
						<key>
							<value>OrdersAssembler</value>
						</key>
						<bean class="com.infolion.platform.dpframework.outsideInterface.dao.assemblers.OrdersAssembler"/>
					</entry>
					<entry>
						<key>
							<value>OrdersDocLinesAssembler</value>
						</key>
						<bean class="com.infolion.platform.dpframework.outsideInterface.dao.assemblers.OrdersDocLinesAssembler"/>
					</entry>
					-->
			</map>
		</property>
		<property name="assemblerList">
			<list>   
				<bean class="com.infolion.platform.dpframework.outsideInterface.dao.assemblers.EmployeesInfoAssembler"/>
				<bean class="com.infolion.platform.dpframework.outsideInterface.dao.assemblers.DocLinesAssembler"/>
			</list>
		</property>
	</bean>
</beans>
