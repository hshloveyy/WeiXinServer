# 设置org.zblog域对应的级别FATAL,ERROR,WARN,INFO,DEBUG和输出地
log4j.rootLogger=INFO,FileOut,ConsoleOut
#log4j.logger.com.infolion.platform.dpframework.dataTransfers =DEBUG
log4j.logger.com.infolion = DEBUG
log4j.logger.org.springframework= ERROR
log4j.logger.org.hibernate= ERROR
log4j.logger.org.jbpm=ERROR
#log4j.rootLogger=INFO,FileOut

# 设置FileOut输出
log4j.appender.FileOut=org.apache.log4j.RollingFileAppender 
# 设置输出地FileOut到文件（文件大小到达指定尺寸的时候产生一个新的文件）
# 文件位置
log4j.appender.FileOut.File=${catalina.base}/logs/xmdp.log
# 文件大小
log4j.appender.FileOut.MaxFileSize=5000KB 
# 指定采用html方式输出
log4j.appender.FileOut.MaxBackupIndex=100

# 设置输出布局格式
# log4j.appender.FileOut.layout=org.apache.log4j.HTMLLayout 

# 设置FileOut的输出布局格式PatterLayout,(可以灵活地指定布局模式）
 log4j.appender.FileOut.layout=org.apache.log4j.PatternLayout 
# 配置日志输出的格式
 log4j.appender.FileOut.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%5p] [%c] (%F:%L) \r\n- %m%n

# 自定义的xml格式
# log4j.appender.FileOut.layout=org.apache.log4j.xml.InfolionXMLLayout
# 配置日志输出的格式
# log4j.appender.FileOut.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %p %c %F %L %m%n


# 设置输出地ConsoleOut，为ConsoleAppender(控制台) 
log4j.appender.ConsoleOut=org.apache.log4j.ConsoleAppender 
# 设置ConsoleOut的输出布局格式SimpleLayout
log4j.appender.ConsoleOut.layout=org.apache.log4j.PatternLayout 
log4j.appender.ConsoleOut.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} [%5p] [%c] (%F:%L) \r\n  %m%n



########################## 参考信息 ##############################

# 其中，Log4j提供的输出目的地有以下几种： 
# org.apache.log4j.ConsoleAppender（控制台）
# org.apache.log4j.FileAppender（文件）
# org.apache.log4j.DailyRollingFileAppender（每天产生一个日志文件）
# org.apache.log4j.RollingFileAppender（文件大小到达指定尺寸的时候产生一个新的文件）
# org.apache.log4j.WriterAppender（将日志信息以流格式发送到任意指定的地方）

# 其中，Log4j提供的输出格式layout有以下几种： 
# org.apache.log4j.HTMLLayout（以HTML表格形式布局）
# org.apache.log4j.PatternLayout（可以灵活地指定布局模式）
# org.apache.log4j.SimpleLayout（包含日志信息的级别和信息字符串）
# org.apache.log4j.TTCCLayout（包含日志产生的时间、线程、类别等等信息）

# 信息输出格式
# %p:日志信息级别
# %d{}:日志信息产生时间
# %c:日志信息所在地（类名）
# %m:产生的日志具体信息
# %n:输出日志信息换行
